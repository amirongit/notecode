project
    an environment in which django files are kept.
    a project is a collection of configurations and apps for a particular
    website.

application
    a python package which follows a certain convention.
    an app is a web application that does something and can be used in multiple
    projects.

view
    a type of webpage in a django application which generally serves an
    specific function usually with an specific template. webpages and other
    contents in django are delivered by views which is represented by a python
    callable.

URLconf
    is used to get from a url to it's view. it maps url patterns to views.

model
    a single definition containing essential fields and behaviors of the data.

migration
    a way for django to store changes to models, existing as files on disk.
    provides the ability of changing models overtime without the need of
    deleting or creating new tables.

template namespacing
    django looks between all the templates within a project to find a template,
    so templates must be inside differently named directories, otherwise, two
    templates with the same name can't be distinguished by django.

dot lookup syntax
    django template uses this syntax to access variable attributes. when an
    attribute is accessed usng dot lookup syntax, django first does a
    dictionary lookup, failing that, it does an attribute lookup and finally
    it does a list index lookup

url names namespacing
    the url tag looks for names in the root URLconf, so views with the same
    name can't be distinguished. in order to prevent this conflict, a url
    namespace can be set in each apps urls.py module.

generic views
    abstract common tasks to classes to avoid redundancy.

static files namespacing
    django looks between all static files within a project to find a file, so
    static files should be inside differently named directories, otherwise, two
    files with the same name can't be distinguished by django.
